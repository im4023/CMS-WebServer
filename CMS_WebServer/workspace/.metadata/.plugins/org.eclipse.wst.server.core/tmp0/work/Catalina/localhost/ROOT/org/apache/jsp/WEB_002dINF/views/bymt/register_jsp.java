/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.53
 * Generated at: 2020-06-12 07:06:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.bymt;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-jstl-1.2.jar", Long.valueOf(1587602298702L));
    _jspx_dependants.put("jar:file:/C:/Users/Bymtech/Desktop/CMS/web/board%20-%20ing/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/board/WEB-INF/lib/jstl-jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write(" <title>회원가입</title> \r\n");
      out.write(" \r\n");
      out.write(" \t<script>\r\n");
      out.write("\t\t\tfunction formCheck() { \r\n");
      out.write("\t\t\t\tvar adminId = document.forms[0].adminId;\r\n");
      out.write("\t\t\t\tvar adminPass = document.forms[0].adminPass; \r\n");
      out.write("\t\t\t\tvar adminName = document.forms[0].adminName; \r\n");
      out.write("\t\t\t\tvar codeNum = document.forms[0].codeNum;\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif (adminId.value == null || adminId.value == \"\"){                                   \r\n");
      out.write("\t\t\t\t\talert('아이디를 입력하지 않으셨습니다.');                                  \r\n");
      out.write("\t\t\t\t\tadminId.focus();                          \r\n");
      out.write("\t\t\t\t\treturn false;                                                     \r\n");
      out.write("\t\t\t\t}else if(adminId.value.indexOf(\"'\") != -1 ||\r\n");
      out.write("\t\t\t\t\t\tadminId.value.indexOf(\"&\") != -1 ||\r\n");
      out.write("\t\t\t\t\t\tadminId.value.indexOf(\"*\") != -1 ||\r\n");
      out.write("\t\t\t\t\t\tadminId.value.indexOf(\"--\") != -1 ||\r\n");
      out.write("\t\t\t\t\t\tadminId.value.indexOf(\";\") != -1\r\n");
      out.write("\t\t\t\t\t\t){\r\n");
      out.write("\t\t\t\t      alert(\"',&,*,--,; 와 같은 문자는 입력하실 수 없습니다.\");\r\n");
      out.write("\t\t\t\t      adminId.focus();\r\n");
      out.write("\t\t\t\t      return false;\r\n");
      out.write("\t\t\t\t }\t\r\n");
      out.write("\t\t\t\tif (adminPass.value == null || adminPass.value == \"\"){                                   \r\n");
      out.write("\t\t\t\t\talert('비밀번호를 입력하지 않으셨습니다.');                                  \r\n");
      out.write("\t\t\t\t\tdocument.forms[0].adminPass.focus();                          \r\n");
      out.write("\t\t\t\t\treturn false;                                                     \r\n");
      out.write("\t\t\t\t}else if(adminPass.value.indexOf(\"'\") != -1 ||\r\n");
      out.write("\t\t\t\t\t\tadminPass.value.indexOf(\"&\") != -1 ||\r\n");
      out.write("\t\t\t\t\t\tadminPass.value.indexOf(\"*\") != -1 ||\r\n");
      out.write("\t\t\t\t\t\tadminPass.value.indexOf(\"--\") != -1 ||\r\n");
      out.write("\t\t\t\t\t\tadminPass.value.indexOf(\";\") != -1\r\n");
      out.write("\t\t\t\t\t\t){\r\n");
      out.write("\t\t\t\t      alert(\"',&,*,--,; 와 같은 문자는 입력하실 수 없습니다.\");\r\n");
      out.write("\t\t\t\t      adminPass.focus();\r\n");
      out.write("\t\t\t\t      return false;\r\n");
      out.write("\t\t\t\t }\r\n");
      out.write("\t\t\t\tif (adminName.value == null || adminName.value == \"\"){                                   \r\n");
      out.write("\t\t\t\t\talert('닉네임을 입력하지 않으셨습니다.');                                  \r\n");
      out.write("\t\t\t\t\tdocument.forms[0].adminName.focus();                          \r\n");
      out.write("\t\t\t\t\treturn false;                                                     \r\n");
      out.write("\t\t\t\t}else if(adminName.value.indexOf(\"'\") != -1 ||\r\n");
      out.write("\t\t\t\t\t\tadminName.value.indexOf(\"&\") != -1 ||\r\n");
      out.write("\t\t\t\t\t\tadminName.value.indexOf(\"*\") != -1 ||\r\n");
      out.write("\t\t\t\t\t\tadminName.value.indexOf(\"--\") != -1 ||\r\n");
      out.write("\t\t\t\t\t\tadminName.value.indexOf(\";\") != -1\r\n");
      out.write("\t\t\t\t\t\t){\r\n");
      out.write("\t\t\t\t      alert(\"',&,*,--,; 와 같은 문자는 입력하실 수 없습니다.\");\r\n");
      out.write("\t\t\t\t      adminName.focus();\r\n");
      out.write("\t\t\t\t      return false;\r\n");
      out.write("\t\t\t\t }\r\n");
      out.write("\t\t\t\tif (codeNum.value ==\"0\"){\r\n");
      out.write("\t\t\t\t\talert('지역을 선택하지 않으셨습니다.');\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t};\r\n");
      out.write("\t\t</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<form role=\"form\" method=\"post\" autocomplete=\"off\" onsubmit=\"return formCheck();\">\r\n");
      out.write("\t<p>\r\n");
      out.write("\t\t<label for=\"adminId\">아이디</label>\r\n");
      out.write("\t\t<input type=\"text\" id=\"adminId\" name=\"adminId\" />\r\n");
      out.write("\t</p>  \r\n");
      out.write("\t<p>\r\n");
      out.write("\t\t<label for=\"adminPass\">패스워드</label>\r\n");
      out.write("\t\t<input type=\"password\" id=\"adminPass\" name=\"adminPass\" />\r\n");
      out.write("\t</p>\r\n");
      out.write("\t<p>\r\n");
      out.write("\t\t<label for=\"adminName\">닉네임</label>\r\n");
      out.write("\t\t<input type=\"text\" id=\"adminName\" name=\"adminName\" />\r\n");
      out.write("\t</p>\r\n");
      out.write("\t<p>\r\n");
      out.write("\t\t<label for=\"codeNum\">지역</label>\r\n");
      out.write("\t\t<select name=\"codeNum\" >\r\n");
      out.write("\t\t\t<option value=\"0\">--</option>\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t<option value=\"1\">바이엠텍</option>   \r\n");
      out.write("\t\t\t<option value=\"2\">대전</option> \r\n");
      out.write("\t\t\t<option value=\"3\">세종</option>   \r\n");
      out.write("\t\t</select>\r\n");
      out.write("\t</p>\r\n");
      out.write("\t<p>\r\n");
      out.write("\t\t<button type=\"submit\" id=\"submit\" >가입</button>  \r\n");
      out.write("\t</p>\r\n");
      out.write("\t<p>\r\n");
      out.write("\t\t<a href=\"/\">처음으로</a>\r\n");
      out.write("\t</p>\r\n");
      out.write("</form>\r\n");
      out.write(" \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
