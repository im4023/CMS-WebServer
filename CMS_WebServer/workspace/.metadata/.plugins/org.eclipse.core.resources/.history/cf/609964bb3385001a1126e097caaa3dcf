package com.board.controller;


import java.util.List;
import java.util.Locale;

import javax.inject.Inject;
import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.board.domain.AnnounceVO;
import com.board.domain.PageMaker;
import com.board.domain.SearchCriteria;
import com.board.domain.Criteria;
import com.board.service.AnnounceService;

@Controller
@RequestMapping("/")
public class AnnounceController {
	
	private static final Logger logger = LoggerFactory.getLogger(AnnounceController.class);

	@Inject
	private AnnounceService service;
	
	// 게시물 목록
	@RequestMapping(value = "/announce/list", method = RequestMethod.GET)
	public void getList(Model model) throws Exception {
			List list = null;
			list = service.list();
			model.addAttribute("list", list);
	}
	
	// 게시물 작성(페이지)
	@RequestMapping(value = "/announce/write", method = RequestMethod.GET)
	public void getWrite(HttpSession session, Model model) throws Exception{
		logger.info("get write");
		
		Object loginInfo = session.getAttribute("member");
		
		if(loginInfo == null) {
			model.addAttribute("msg",false);
		}
	}
			
	// 게시물 작성(글쓰기)
	@RequestMapping(value = "/announce/write", method = RequestMethod.POST)
	public String postWrite(AnnounceVO vo) throws Exception {
		service.write(vo);
		return "redirect:/announce/announcement?num=1";
	}
	
	// 게시물 조회
	@RequestMapping(value = "/announce/view", method = RequestMethod.GET)
	public void getView(@RequestParam("idx") int idx, Model model) throws Exception {
		AnnounceVO vo = service.view(idx);
		model.addAttribute("view", vo);
	}
	
	// 게시물 수정
	@RequestMapping(value = "/announce/modify", method = RequestMethod.GET)
	public void getMoidfy(@RequestParam("idx") int idx, Model model) throws Exception{
		AnnounceVO vo = service.view(idx);
		model.addAttribute("view", vo);
	}
	
	// 게시물 수정
	@RequestMapping(value = "/announce/modify", method = RequestMethod.POST)
	public String postMoidfy(AnnounceVO vo) throws Exception{
		service.modify(vo);
		return "redirect:/announce/view?idx=" +vo.getIdx();
	}
	
	// 게시물 삭제
	@RequestMapping(value = "/announce/delete", method = RequestMethod.GET)
	public String getDelete(@RequestParam("idx") int idx) throws Exception{
		service.delete(idx);
		return "redirect:/announce/announcement?num=1";
	}
	
	// 글 목록 + 페이징
	@RequestMapping(value = "/announce/listPage", method = RequestMethod.GET)
	public void listPage(@ModelAttribute("cri") Criteria cri, Model model) throws Exception {
		logger.info("get list page");
		 
		 List<AnnounceVO> list = service.listPage(cri);
		 model.addAttribute("list", list);
		 
		 PageMaker pageMaker = new PageMaker();
		 pageMaker.setCri(cri);
		 pageMaker.setTotalCount(service.listCount()); // 게시물 전체 갯수 파악
		 model.addAttribute("pageMaker", pageMaker);
	 
	}
	
	// 글 목록 + 페이징 + 검색
	@RequestMapping(value = "/announce/announcement", method = RequestMethod.GET)
	public void listPage(@ModelAttribute("scri") SearchCriteria scri, Model model) throws Exception {
		logger.info("get list search");
		
		List<AnnounceVO> list = service.announcement(scri);
		model.addAttribute("list", list);
		
		PageMaker pageMaker = new PageMaker();
		pageMaker.setCri(scri);
		pageMaker.setTotalCount(service.countSearch(scri));// 검색된 게시물 전체 갯수 파악
		model.addAttribute("pageMaker", pageMaker);
	}
	
	// 인사말
	@RequestMapping(value = "/sub/company", method = RequestMethod.GET)
	public String company(Locale locale, Model model) {
		logger.info("Welcome home! The client locale is {}.", locale);
				
		return "/sub/company";
	}
	
	// 사업소개
	@RequestMapping(value = "/sub/business", method = RequestMethod.GET)
	public String business(Locale locale, Model model) {
		logger.info("Welcome home! The client locale is {}.", locale);
		
				
		return "/sub/business";
	}
	
	// 연혁
	@RequestMapping(value = "/sub/history", method = RequestMethod.GET)
	public String history(Locale locale, Model model) {
		logger.info("Welcome home! The client locale is {}.", locale);
		
				
		return "/sub/history";
	}
	
	// 찾아오시는길
	@RequestMapping(value = "/sub/location", method = RequestMethod.GET)
	public String location(Locale locale, Model model) {
		logger.info("Welcome home! The client locale is {}.", locale);
		
				
		return "/sub/location";
	}
	
	// 관리자로그인 페이지
		@RequestMapping(value = "bymt/admin", method = RequestMethod.GET)
		public String admin(Locale locale, Model model) {
			logger.info("Welcome home! The client locale is {}.", locale);
			
					
			return "bymt/admin";
		}
	
}
	
